{"version":3,"sources":["redux/auth/auth-selectors.js","components/Sidebar/Navigation.js","components/UserMenu/UserMenu.js","components/Sidebar/AuthNav.js","components/Sidebar/Sidebar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","components/Sidebar/Sidebar.module.css","utils/routes.js","redux/contacts/contacts-actions.js","components/UserMenu/UserMenu.module.css","services/contactshelf-api.js","redux/contacts/contacts-operations.js","redux/auth/auth-operations.js"],"names":["authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getUserEmail","email","getError","error","getIsFetchingCurrentUser","isFetchingCurrentUser","Navigation","useSelector","exact","to","className","s","link","activeClassName","activeLink","UserMenu","dispatch","useDispatch","container","greatings","logOutButton","type","onClick","authOperations","logOut","AuthNav","Sidebar","sidebar","PrivateRoute","redirectTo","children","routeProps","isLoggetIn","PublicRoute","shouldRedirect","restricted","Registration","lazy","Login","ContactsView","HomeView","App","useEffect","fetchCurrentUser","fallback","color","height","width","path","routes","register","contacts","login","entities","createReducer","fetchContacts","fulfilled","_","payload","addContact","deleteContact","filter","id","isLoading","pending","rejected","contactsActions","combineReducers","authSlice","createSlice","initialState","token","extraReducers","logIn","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phoneBook","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports","changeFilter","createAction","a","axios","get","data","postContact","contact","post","number","contactId","delete","createAsyncThunk","rejectWithValue","contactShelfAPI","value","defaults","baseURL","headers","common","Authorization","credentials","operations","thunkAPI","getState","persistedToken","RejectWithValue"],"mappings":"yPAceA,EARO,CAClBC,cAPkB,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,YAQtCC,YAPgB,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,KAAKC,MAQzCC,aAPiB,SAAAN,GAAK,OAAIA,EAAMC,KAAKG,KAAKG,OAQ1CC,SAPa,SAAAR,GAAK,OAAIA,EAAMC,KAAKQ,OAQjCC,yBAP6B,SAAAV,GAAK,OAAIA,EAAMC,KAAKU,wB,wBCatCC,EAXI,WACf,IAAMV,EAAaW,YAAYf,EAAcC,eAE7C,OACI,gCACI,cAAC,IAAD,CAASe,OAAK,EAACC,GAAG,IAAIC,UAAWC,IAAEC,KAAMC,gBAAiBF,IAAEG,WAA5D,kBACClB,GAAc,cAAC,IAAD,CAASY,OAAK,EAACC,GAAG,YAAYC,UAAWC,IAAEC,KAAMC,gBAAiBF,IAAEG,WAApE,0B,wBCOZC,EAdE,WACb,IAAMC,EAAWC,cACXlB,EAAOQ,YAAYf,EAAcK,aAEvC,OACI,sBAAKa,UAAWC,IAAEO,UAAlB,UACI,oBAAGR,UAAWC,IAAEQ,UAAhB,sBAAsCpB,EAAtC,OACA,wBAAQW,UAAWC,IAAES,aAAcC,KAAK,SAASC,QAAS,kBAAMN,EAASO,IAAeC,WAAxF,yBCFGC,EAPC,kBACZ,gCACI,cAAC,IAAD,CAASjB,OAAK,EAACC,GAAG,YAAYC,UAAWC,IAAEC,KAAMC,gBAAiBF,IAAEG,WAApE,sBACA,cAAC,IAAD,CAASN,OAAK,EAACC,GAAG,SAASC,UAAWC,IAAEC,KAAMC,gBAAiBF,IAAEG,WAAjE,uBCYOY,EAXC,WACZ,IAAM9B,EAAaW,YAAYf,EAAcC,eAE7C,OACI,yBAAQiB,UAAWC,IAAEgB,QAArB,UACI,cAAC,EAAD,IACC/B,EAAa,cAAC,EAAD,IAAe,cAAC,EAAD,Q,6ECI1BgC,EAbM,SAAC,GAIf,IAHHC,EAGE,EAHFA,WACAC,EAEE,EAFFA,SACGC,EACD,iBACIC,EAAazB,YAAYf,EAAcC,eAC7C,OACI,cAAC,IAAD,2BAAWsC,GAAX,aACKC,EAAaF,EAAW,cAAC,IAAD,CAAUrB,GAAIoB,Q,4BCMpCI,EAdK,SAAC,GAId,IAHHJ,EAGE,EAHFA,WACAC,EAEE,EAFFA,SACGC,EACD,iBAEIG,EADa3B,YAAYf,EAAcC,gBACRsC,EAAWI,WAChD,OACI,cAAC,IAAD,2BAAWJ,GAAX,aACKG,EAAiB,cAAC,IAAD,CAAUzB,GAAIoB,IAAiBC,MCDvDM,EAAeC,gBAAK,kBAAM,uDAC1BC,EAAQD,gBAAK,kBAAM,uDACnBE,EAAeF,gBAAK,kBAAM,iCAC1BG,EAAWH,gBAAK,kBAAM,iCA2CZI,EAxCJ,WACV,IAAMpC,EAAwBE,YAAYf,EAAcY,0BAClDY,EAAWC,cAMjB,OAJAyB,qBAAU,WACR1B,EAASO,IAAeoB,sBACvB,CAAC3B,KAGDX,GACC,qCACA,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,WAAD,CACEuC,SAAU,cAAC,IAAD,CACRvB,KAAK,YACLwB,MAAM,UACNC,OAAQ,IACRC,MAAO,MALX,UAQE,cAAC,EAAD,CAAavC,OAAK,EAACwC,KAAK,IAAxB,SACE,cAACR,EAAD,MAEF,cAAC,EAAD,CAAahC,OAAK,EAACwC,KAAMC,IAAOC,SAAUf,YAAU,EAACN,WAAYoB,IAAOE,SAAxE,SACE,cAACf,EAAD,MAEF,cAAC,EAAD,CAAa5B,OAAK,EAACwC,KAAMC,IAAOG,MAAOjB,YAAU,EAACN,WAAYoB,IAAOE,SAArE,SACE,cAACb,EAAD,MAEF,cAAC,EAAD,CAAc9B,OAAK,EAACwC,KAAMC,IAAOE,SAAUtB,WAAYoB,IAAOG,MAA9D,SACE,cAACb,EAAD,e,sEC7CNc,EAAWC,YAAc,IAAD,mBAMzBC,gBAAcC,WAAY,SAACC,EAAD,YAAMC,WANP,cAOzBC,aAAWH,WAAY,SAAC9D,EAAD,YAAUgE,SAAV,mBAAqChE,OAPnC,cAQzBkE,gBAAcJ,WAAY,SAAC9D,EAAD,OAAUgE,EAAV,EAAUA,QAAV,OACvBhE,EAAMmE,QAAO,qBAAGC,KAAgBJ,QATV,IAYxBK,EAAYT,aAAc,GAAD,mBAK1BC,gBAAcS,SAAU,kBAAM,KALJ,cAM1BT,gBAAcC,WAAY,kBAAM,KANN,cAO1BD,gBAAcU,UAAW,kBAAM,KAPL,cAa1BL,gBAAcI,SAAU,kBAAM,KAbJ,cAc1BJ,gBAAcJ,WAAY,kBAAM,KAdN,cAe1BI,gBAAcK,UAAW,kBAAM,KAfL,cAqB1BN,aAAWK,SAAU,kBAAM,KArBD,cAsB1BL,aAAWH,WAAY,kBAAM,KAtBH,cAuB1BG,aAAWM,UAAW,kBAAM,KAvBF,IA0BzB9D,EAAQmD,YAAc,MAAD,mBAItBC,gBAAcU,UAAW,SAACR,EAAD,YAAMC,WAJT,cAKtBH,gBAAcS,SAAU,kBAAM,QALR,cAUtBJ,gBAAcK,UAAW,SAACR,EAAD,YAAMC,WAVT,cAWtBE,gBAAcI,SAAU,kBAAM,QAXR,cAgBtBL,aAAWM,UAAW,SAACR,EAAD,YAAMC,WAhBN,cAiBtBC,aAAWK,SAAU,kBAAM,QAjBL,IAoBrBH,EAASP,YAAc,GAAD,eACvBY,KAA+B,SAACT,EAAD,YAAMC,YAG3BS,cAAgB,CAC3Bd,WACAQ,SACAE,YACA5D,UCdWiE,GA7CGC,YAAY,CAC1BtE,KAAM,OACNuE,aAViB,CACjBxE,KAAM,CAAEC,KAAM,KAAME,MAAO,MAC3BsE,MAAO,KACP3E,YAAY,EACZO,MAAO,KACPE,uBAAuB,GAMvBmE,eAAa,mBACRjD,IAAe2B,SAASc,SADhB,SACyBtE,EAAO+D,GACrC/D,EAAMS,MAAQ,QAFT,cAIRoB,IAAe2B,SAASM,WAJhB,SAI2B9D,EAJ3B,GAIgD,IAAZgE,EAAW,EAAXA,QACzChE,EAAMI,KAAO4D,EAAQ5D,KACrBJ,EAAM6E,MAAQb,EAAQa,MACtB7E,EAAME,YAAa,KAPd,cASR2B,IAAe2B,SAASe,UAThB,SAS0BvE,EAT1B,GAS+C,IAAZgE,EAAW,EAAXA,QACxChE,EAAMS,MAAQuD,KAVT,cAYRnC,IAAekD,MAAMT,SAZb,SAYsBtE,EAAO+D,GAClC/D,EAAMS,MAAQ,QAbT,cAeRoB,IAAekD,MAAMjB,WAfb,SAewB9D,EAfxB,GAe6C,IAAZgE,EAAW,EAAXA,QACtChE,EAAMI,KAAO4D,EAAQ5D,KACrBJ,EAAM6E,MAAQb,EAAQa,MACtB7E,EAAME,YAAa,KAlBd,cAoBR2B,IAAekD,MAAMR,UApBb,SAoBuBvE,EApBvB,GAoB4C,IAAZgE,EAAW,EAAXA,QACrChE,EAAMS,MAAQuD,KArBT,cAuBRnC,IAAeC,OAAOgC,WAvBd,SAuByB9D,EAAO+D,GACrC/D,EAAMI,KAAO,CAAEC,KAAM,KAAME,MAAO,MAClCP,EAAM6E,MAAQ,KACd7E,EAAME,YAAa,KA1Bd,cA4BR2B,IAAeoB,iBAAiBqB,SA5BxB,SA4BiCtE,EAAO+D,GAC7C/D,EAAMW,uBAAwB,KA7BzB,cA+BRkB,IAAeoB,iBAAiBa,WA/BxB,SA+BmC9D,EA/BnC,GA+BwD,IAAZgE,EAAW,EAAXA,QACjDhE,EAAMI,KAAO4D,EACbhE,EAAME,YAAa,EACnBF,EAAMW,uBAAwB,KAlCzB,cAoCRkB,IAAeoB,iBAAiBsB,UApCxB,SAoCkCvE,EAAO+D,GAC9C/D,EAAMW,uBAAwB,KArCzB,KA0CjB,QCzCMqE,GAAU,YAAOC,YAAqB,CACxCC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAI5DC,GAAoB,CACtBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGHC,GAAQC,YAAe,CAChCC,QAAS,CACL/F,KAAMgG,YAAeP,GAAmBQ,IACxCC,UAAWC,GAEfpB,cACAqB,UAAUC,IAGDC,GAAYC,YAAaV,I,cCzBtCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACE,cAAC,cAAD,CAAac,QAAS,KAAML,UAAWA,GAAvC,SACA,cAAC,IAAD,UACE,cAAC,EAAD,YAKNM,SAASC,eAAe,U,mBCpB1BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,WAAa,8B,gCCD/F,sCAAMzD,EAAS,CACXE,SAAU,YACVC,MAAO,SACPF,SAAU,c,gCCHd,6CAEayD,EAAeC,YAAa,2B,mBCDzCH,EAAOC,QAAU,CAAC,UAAY,4BAA4B,UAAY,4BAA4B,aAAe,iC,8QCC1G,SAAenD,IAAtB,+B,4CAAO,8BAAAsD,EAAA,sEACoBC,IAAMC,IAAI,aAD9B,uBACKC,EADL,EACKA,KADL,kBAEIA,GAFJ,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,SAAAL,EAAA,sEACUC,IAAMK,KAAK,YAAa,CACjCpH,KAAMmH,EAAQnH,KACdqH,OAAQF,EAAQE,SAHjB,oF,sBAOA,SAAexD,EAAtB,kC,4CAAO,WAA6ByD,GAA7B,SAAAR,EAAA,sEACUC,IAAMQ,OAAN,oBAA0BD,IADpC,oF,kCCVM9D,EAAgBgE,YACzB,yBADyC,uCAEzC,WAAO9D,EAAP,oBAAAoD,EAAA,6DAAYW,EAAZ,EAAYA,gBAAZ,kBAE+BC,IAF/B,cAEctE,EAFd,yBAGeA,GAHf,yDAKeqE,EAAgB,EAAD,KAL9B,yDAFyC,yDAYhC5D,EAAgB2D,YACzB,yBADyC,uCAEzC,WAAOzD,EAAP,kBAAA+C,EAAA,6DAAaW,EAAb,EAAaA,gBAAb,kBAEcC,EAA8B3D,GAF5C,gCAGeA,GAHf,yDAKe0D,EAAgB,EAAD,KAL9B,yDAFyC,yDAYhC7D,EAAa4D,YACtB,sBADsC,uCAEtC,uCAAAV,EAAA,6DAAQ9G,EAAR,EAAQA,KAAMqH,EAAd,EAAcA,OAAWI,EAAzB,EAAyBA,gBAAzB,kBAE+BC,EAA4B,CAC/C1H,OACAqH,WAJZ,uBAEgBJ,EAFhB,EAEgBA,KAFhB,kBAMeA,GANf,2DAQeQ,EAAgB,EAAD,KAR9B,0DAFsC,yDAe7Bb,EAAe,SAACe,GAAD,OAAW,SAAA1G,GACnCA,EAASkD,IAA6BwD,O,wGCzC1CZ,IAAMa,SAASC,QAAU,yCAEzB,IAAMrD,EAAQ,SACNA,GACAuC,IAAMa,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDxD,IAF1DA,EAAQ,WAKNuC,IAAMa,SAASE,QAAQC,OAAOC,cAAgB,IAIhD7E,EAAWqE,YAAiB,gBAAD,uCAAkB,WAAOS,EAAP,sBAAAnB,EAAA,6DAAsBW,EAAtB,EAAsBA,gBAAtB,kBAEpBV,IAAMK,KAAK,gBAAiBa,GAFR,uBAEnChB,EAFmC,EAEnCA,KACRzC,EAAUyC,EAAKzC,OAH4B,kBAIpCyC,GAJoC,2DAMpCQ,EAAgB,EAAD,KANqB,0DAAlB,yDAU3B/C,EAAQ8C,YAAiB,aAAD,uCAAe,WAAOS,EAAP,sBAAAnB,EAAA,6DAAsBW,EAAtB,EAAsBA,gBAAtB,kBAEdV,IAAMK,KAAK,eAAgBa,GAFb,uBAE7BhB,EAF6B,EAE7BA,KACRzC,EAAUyC,EAAKzC,OAHsB,kBAI9ByC,GAJ8B,2DAM9BQ,EAAgB,EAAD,KANe,0DAAf,yDAoCxBS,EAAa,CACf/E,WACA1B,OA5BW+F,YAAiB,cAAD,sBAAgB,sBAAAV,EAAA,+EAEjCC,IAAMK,KAAK,iBAFsB,OAGvC5C,IAHuC,wGA6B3CE,QACA9B,iBArBqB4E,YAAiB,eAAD,uCAAiB,WAAO9D,EAAGyE,GAAV,qBAAArB,EAAA,yDAChDnH,EAAQwI,EAASC,WAGA,QAFjBC,EAAiB1I,EAAMC,KAAK4E,OAFoB,yCAK3C2D,EAASG,mBALkC,cAQtD9D,EAAU6D,GAR4C,kBAU3BtB,IAAMC,IAAI,kBAViB,uBAU1CC,EAV0C,EAU1CA,KAV0C,kBAW3CA,GAX2C,4FAAjB,0DAwB1BiB,Q","file":"static/js/main.cad5be29.chunk.js","sourcesContent":["const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUserName = state => state.auth.user.name;\nconst getUserEmail = state => state.auth.user.email;\nconst getError = state => state.auth.error;\nconst getIsFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n    getIsLoggedIn,\n    getUserName,\n    getUserEmail,\n    getError,\n    getIsFetchingCurrentUser,\n};\n\nexport default authSelectors;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport authSelectors from \"redux/auth/auth-selectors\";\nimport s from './Sidebar.module.css';\n\nconst Navigation = () => {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n    return (\n        <nav>\n            <NavLink exact to=\"/\" className={s.link} activeClassName={s.activeLink}>Main</NavLink>\n            {isLoggedIn && <NavLink exact to=\"/contacts\" className={s.link} activeClassName={s.activeLink}>Contacts</NavLink>}\n        </nav>\n    );\n}\n\nexport default Navigation;","import { useDispatch, useSelector } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport authOperations from 'redux/auth/auth-operations';\nimport s from './UserMenu.module.css';\n\nconst UserMenu = () => {\n    const dispatch = useDispatch();\n    const name = useSelector(authSelectors.getUserName);\n\n    return (\n        <div className={s.container}>\n            <p className={s.greatings} >Welcome, {name}!</p>\n            <button className={s.logOutButton} type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n                Log out\n            </button>\n        </div>\n    );\n}\n\nexport default UserMenu;","import { NavLink } from \"react-router-dom\";\nimport s from './Sidebar.module.css';\n\nconst AuthNav = () => (\n    <div>\n        <NavLink exact to=\"/register\" className={s.link} activeClassName={s.activeLink}>Register</NavLink>\n        <NavLink exact to=\"/login\" className={s.link} activeClassName={s.activeLink}>Login</NavLink>\n    </div>\n);\n\nexport default AuthNav;","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from './AuthNav';\nimport  authSelectors from 'redux/auth/auth-selectors';\nimport s from './Sidebar.module.css';\n\nconst Sidebar = () => {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n    return (\n        <header className={s.sidebar}>\n            <Navigation />\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\n        </header>\n    );\n}\n\nexport default Sidebar;\n\n\n\n\n// import { NavLink } from \"react-router-dom\";\n// import s from './Sidebar.module.css';\n\n// const Sidebar = () => (\n//     <nav className={s.sidebar}>\n        // <NavLink exact to=\"/login\" className={s.link} activeClassName={s.activeLink}>Login</NavLink>\n        // <NavLink exact to=\"/register\" className={s.link} activeClassName={s.activeLink}>Register</NavLink>\n        // <NavLink exact to=\"/contacts\" className={s.link} activeClassName={s.activeLink}>Contacts</NavLink>\n//     </nav>\n// );\n\n// export default Sidebar;","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from \"redux/auth/auth-selectors\";\n\nconst PrivateRoute = ({\n    redirectTo,\n    children,\n    ...routeProps\n}) => {\n    const isLoggetIn = useSelector(authSelectors.getIsLoggedIn);\n    return (\n        <Route {...routeProps}>\n            {isLoggetIn ? children : <Redirect to={redirectTo} />}\n        </Route>\n    );\n}\n\nexport default PrivateRoute;","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from \"redux/auth/auth-selectors\";\n\nconst PublicRoute = ({\n    redirectTo,\n    children,\n    ...routeProps\n}) => {\n    const isLoggetIn = useSelector(authSelectors.getIsLoggedIn);\n    const shouldRedirect = isLoggetIn && routeProps.restricted;\n    return (\n        <Route {...routeProps}>\n            {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n        </Route>\n    );\n}\n\nexport default PublicRoute;","import { lazy, Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Sidebar from 'components/Sidebar';\nimport './App.css';\nimport Loader from 'react-loader-spinner';\nimport { routes } from 'utils/routes';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport authOperations from 'redux/auth/auth-operations';\nimport authSelectors from 'redux/auth/auth-selectors';\n\nconst Registration = lazy(() => import('./components/Registration' /* webpackChunkName: \"Registration\" */));\nconst Login = lazy(() => import('./components/Login' /* webpackChunkName: \"Login\" */));\nconst ContactsView = lazy(() => import('./views/ContactsView' /* webpackChunkName: \"ContactsView\" */));\nconst HomeView = lazy(() => import('./views/HomeView' /* webpackChunkName: \"HomeView\" */));\n// const NotFoundPage = lazy(() => import('./views/NotFoundPage' /* webpackChunkName: \"NotFoundPage\" */ ));\n\nconst App = () => {\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrentUser)\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingCurrentUser && (\n      <>\n      <Sidebar />\n      <Switch>\n        <Suspense\n          fallback={<Loader\n            type=\"ThreeDots\"\n            color=\"#3f51b5\"\n            height={280}\n            width={280} />}>\n          {/* <Route component={NotFoundPage} /> */}\n\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute exact path={routes.register} restricted redirectTo={routes.contacts}>\n            <Registration />\n          </PublicRoute>\n          <PublicRoute exact path={routes.login} restricted redirectTo={routes.contacts}>\n            <Login />\n          </PublicRoute>\n          <PrivateRoute exact path={routes.contacts} redirectTo={routes.login}>\n            <ContactsView />\n          </PrivateRoute>\n        </Suspense>\n      </Switch>\n    </>\n    )\n  );\n}\n\nexport default (App);","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport { fetchContacts, deleteContact, addContact } from './contacts-operations';\nimport * as contactsActions from './contacts-actions';\n\nconst entities = createReducer([], {\n    // [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\n    // [contactsActions.addContactSuccess]: (state, { payload }) => [payload, ...state],\n    // [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    //     state.filter(({ id }) => id !== payload),\n    \n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n    [deleteContact.fulfilled]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n    // [contactsActions.fetchContactsRequest]: () => true,\n    // [contactsActions.fetchContactsSuccess]: () => false,\n    // [contactsActions.fetchContactsError]: () => false,\n\n    [fetchContacts.pending]: () => true,\n    [fetchContacts.fulfilled]: () => false,\n    [fetchContacts.rejected]: () => false,\n\n    // [contactsActions.deleteContactRequest]: () => true,\n    // [contactsActions.deleteContactSuccess]: () => false,\n    // [contactsActions.deleteContactError]: () => false,\n\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n\n    // [contactsActions.addContactRequest]: () => true,\n    // [contactsActions.addContactSuccess]: () => false,\n    // [contactsActions.addContactError]: () => false,\n\n    [addContact.pending]: () => true,\n    [addContact.fulfilled]: () => false,\n    [addContact.rejected]: () => false,\n})\n\nconst error = createReducer(null, {\n    // [contactsActions.fetchContactsError]: (_, { payload }) => payload,\n    // [contactsActions.fetchContactsRequest]: () => null,\n\n    [fetchContacts.rejected]: (_, { payload }) => payload,\n    [fetchContacts.pending]: () => null,\n\n    // [contactsActions.deleteContactError]: (_, { payload }) => payload,\n    // [contactsActions.deleteContactRequest]: () => null,\n\n    [deleteContact.rejected]: (_, { payload }) => payload,\n    [deleteContact.pending]: () => null,\n\n    // [contactsActions.addContactError]: (_, { payload }) => payload,\n    // [contactsActions.addContactRequest]: () => null,\n\n    [addContact.rejected]: (_, { payload }) => payload,\n    [addContact.pending]: () => null,\n})\n\nconst filter = createReducer('', {\n    [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    entities,\n    filter,\n    isLoading,\n    error,\n});","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n    user: { name: null, email: null },\n    token: null,\n    isLoggedIn: false,\n    error: null,\n    isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    extraReducers: {\n        [authOperations.register.pending](state, _) {\n            state.error = null;\n        },\n        [authOperations.register.fulfilled](state, { payload }) {\n            state.user = payload.user;\n            state.token = payload.token;\n            state.isLoggedIn = true;\n        },\n        [authOperations.register.rejected](state, { payload }) {\n            state.error = payload;\n        },\n        [authOperations.logIn.pending](state, _) {\n            state.error = null;\n        },\n        [authOperations.logIn.fulfilled](state, { payload }) {\n            state.user = payload.user;\n            state.token = payload.token;\n            state.isLoggedIn = true;\n        },\n        [authOperations.logIn.rejected](state, { payload }) {\n            state.error = payload;\n        },\n        [authOperations.logOut.fulfilled](state, _) {\n            state.user = { name: null, email: null };\n            state.token = null;\n            state.isLoggedIn = false;\n        },\n        [authOperations.fetchCurrentUser.pending](state, _) {\n            state.isFetchingCurrentUser = true;\n        },\n        [authOperations.fetchCurrentUser.fulfilled](state, { payload }) {\n            state.user = payload;\n            state.isLoggedIn = true;\n            state.isFetchingCurrentUser = false;\n        },\n        [authOperations.fetchCurrentUser.rejected](state, _) {\n            state.isFetchingCurrentUser = false;\n        },\n    },\n});\n\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phoneBookReducer from './contacts/contacts-reducer';\nimport authReducer from './auth';\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    }\n})];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\nexport const store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        phoneBook: phoneBookReducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport App from './App';\nimport {store, persistor} from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2WupE\",\"link\":\"Sidebar_link__t3vmZ\",\"activeLink\":\"Sidebar_activeLink__1lvgz\"};","const routes = {\n    contacts: '/contacts',\n    login: '/login',\n    register: '/register',\n};\n\nexport { routes };","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('phoneBook/changeFilter');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__GgYhE\",\"greatings\":\"UserMenu_greatings__38gFq\",\"logOutButton\":\"UserMenu_logOutButton__1o0Zp\"};","import axios from 'axios';\n\nexport async function fetchContacts() {\n    const { data } = await axios.get('/contacts');\n    return data;\n}\n\nexport async function postContact(contact) {\n    return await axios.post('/contacts', {\n        name: contact.name,\n        number: contact.number\n    });\n}\n\nexport async function deleteContact(contactId) {\n    return await axios.delete(`/contacts/${contactId}`);\n}\n\nexport async function fetchContactById(contactId) {\n    const { data } = await axios.get(`/contacts/${contactId}`);\n    return data;\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactShelfAPI from '../../services/contactshelf-api';\nimport * as contactsActions from './contacts-actions';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetchContacts',\n    async (_, { rejectWithValue }) => {\n        try {\n            const contacts = await contactShelfAPI.fetchContacts();\n            return contacts;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    }\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (id, { rejectWithValue }) => {\n        try {\n            await contactShelfAPI.deleteContact(id);\n            return id;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    }\n);\n\nexport const addContact = createAsyncThunk(\n    'contacts/addContact',\n    async ({name, number}, { rejectWithValue }) => {    \n        try {\n            const { data } = await contactShelfAPI.postContact({\n                name,\n                number,\n            });\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    }\n);\n\nexport const changeFilter = (value) => dispatch => {\n    dispatch(contactsActions.changeFilter(value));\n}","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nconst register = createAsyncThunk('auth/register', async (credentials, { rejectWithValue }) => {\n    try {\n        const { data } = await axios.post('/users/signup', credentials);\n        token.set(data.token);\n        return data;\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nconst logIn = createAsyncThunk('auth/login', async (credentials, { rejectWithValue }) => {\n    try {\n        const { data } = await axios.post('/users/login', credentials);\n        token.set(data.token);\n        return data;\n    } catch (error) {\n        return rejectWithValue(error);\n    }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n    try {\n        await axios.post('/users/logout');\n        token.unset();\n    } catch (error) {\n        // TODO: Добавить обработку ошибки error.message\n    }\n});\n\nconst fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n        return thunkAPI.RejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n        const { data } = await axios.get('/users/current');\n        return data;\n    } catch (error) {\n        // TODO: Добавить обработку ошибки error.message\n    }\n});\n\nconst operations = {\n    register,\n    logOut,\n    logIn,\n    fetchCurrentUser,\n};\n\nexport default operations;"],"sourceRoot":""}