{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getContacts","state","phoneBook","entities","getFilter","filter","getIsLoading","isLoading","getError","error","getVisibleContacts","createSelector","contacts","normalizedFilter","toLocaleLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","handleChange","evt","currentTarget","reset","onSubmit","preventDefault","map","alert","contactsOperations","addContact","className","s","form","label","input","type","pattern","title","required","onChange","button","Filter","e","changeFilter","target","ContactListItem","onDelete","item","onClick","ContactList","filteredContacts","useEffect","fetchContacts","list","id","deleteContact","onDeleteContact","ContactsView"],"mappings":"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","file":"static/js/ContactsView.417d51c0.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.phoneBook.entities;\n\nexport const getFilter = (state) => state.phoneBook.filter;\n\nexport const getIsLoading = (state) => state.phoneBook.isLoading;\n\nexport const getError = (state) => state.phoneBook.error;\n\nexport const getVisibleContacts = createSelector(\n    [getContacts, getFilter], (contacts, filter) => {\n        const normalizedFilter = filter.toLocaleLowerCase();\n        return contacts.filter(({ name }) =>\n            name.toLocaleLowerCase().includes(normalizedFilter));\n    },\n);","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors} from '../../redux/contacts';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(contactsSelectors.getContacts);\n    const dispatch = useDispatch();\n\n    const handleChange = (evt) => {\n        const { name, value } = evt.currentTarget;\n\n        if (name === 'name') {\n            setName(value);\n        } else if (name === 'number') {\n            setNumber(value);\n        };\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        const foundNames = contacts.map(({ name }) => name.toLocaleLowerCase());\n        if (foundNames.includes(name.toLocaleLowerCase())) {\n            alert(`${name} is already in contacts`);\n        } else {\n            dispatch(contactsOperations.addContact({name, number}));\n            reset();\n        }\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n            <label className={s.label}>Name</label>\n            <input\n                className={s.input}\n                value={name}\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={handleChange}\n            />\n\n            <label className={s.label}>Number</label>\n            <input\n                className={s.input}\n                value={number}\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={handleChange}\n            />\n                \n            <button\n                className={s.button}\n                type=\"submit\"\n            >\n                Add contact\n            </button>\n        </form>\n    );\n};\n\nexport default ContactForm;","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors} from '../../redux/contacts';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n    const filter = useSelector(contactsSelectors.getFilter);\n    const dispatch = useDispatch();\n\n    const onChange = (e) => dispatch(contactsOperations.changeFilter(e.target.value));\n\n    return (\n        <div className={s.form}>\n            <label className={s.label}> Find contacts by name</label>\n            <input className={s.input} type=\"text\" value={filter} onChange={onChange}/>\n        </div>\n    )\n}    \n\nexport default Filter;","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ name, number, onDelete }) => (\n    <li className={s.item}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <button type=\"button\" onClick={onDelete}>Delete</button>\n    </li>\n\n);\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors} from '../../redux/contacts';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const filteredContacts = useSelector(contactsSelectors.getVisibleContacts);\n    \n    useEffect(() => {\n        dispatch(contactsOperations.fetchContacts())\n    }, [dispatch]);\n\n    const onDeleteContact = (id) => {\n        dispatch(contactsOperations.deleteContact(id));\n    };\n\n    return (\n        filteredContacts && (<ul className={s.list}>\n            {filteredContacts.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    onDelete={() => onDeleteContact(id)}\n                />\n            ))}\n        </ul>)\n    );\n}\n\nexport default ContactList;","import ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\nconst ContactsView = () => {\n\n    return (\n        <div>\n            <h1 className=\"text\">Phonebook</h1>\n            <ContactForm />\n            <h2 className=\"text\">Contacts</h2>\n            <Filter />\n            <ContactList />\n        </div>\n        \n    );\n}\n\nexport default ContactsView;"],"sourceRoot":""}