{"version":3,"sources":["components/Sidebar/Sidebar.module.css","utils/routes.js","redux/actions.js","services/contactshelf-api.js","redux/operations.js","redux/reducer.js","redux/store.js","components/Sidebar/Sidebar.js","App.js","index.js"],"names":["module","exports","routes","contacts","login","register","changeFilter","createAction","fetchContacts","a","axios","get","data","postContact","contact","post","name","number","deleteContact","contactId","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactShelfAPI","id","addContact","value","dispatch","contactsActions","entities","createReducer","fulfilled","payload","state","filter","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","phoneBook","phoneBookReducer","devTools","process","Sidebar","className","s","sidebar","exact","to","link","activeClassName","activeLink","Registration","lazy","Login","ContactsView","NotFoundPage","App","fallback","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5dc5dd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2WupE\",\"link\":\"Sidebar_link__t3vmZ\",\"activeLink\":\"Sidebar_activeLink__1lvgz\"};","const routes = {\n    contacts: '/contacts',\n    login: '/login',\n    register: '/register',\n};\n\nexport { routes };","import { createAction } from '@reduxjs/toolkit';\n\n////////////////////////     FETCH CONTACTS     //////////////////////////////////////\n\n// // pending\n// export const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\n// // fulfilled\n// export const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\n// // rejected\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\n\n////////////////////////     DELETE CONTACT    //////////////////////////////////////\n\n// // pending\n// export const deleteContactRequest = createAction('phoneBook/deleteContactRequest');\n// // fulfilled\n// export const deleteContactSuccess = createAction('phoneBook/deleteContactSuccess');\n// // rejected\n// export const deleteContactError = createAction('phoneBook/deleteContactError');\n\n////////////////////////     ADD CONTACT //////////////////////////////////////\n\n// // pending\n// export const addContactRequest = createAction('phoneBook/addContactRequest');\n// // fulfilled\n// export const addContactSuccess = createAction('phoneBook/addContactSuccess');\n// // rejected\n// export const addContactError = createAction('phoneBook/addContactError');\n\n////////////////////////     CHANGE FILTER    //////////////////////////////////////\n\nexport const changeFilter = createAction('phoneBook/changeFilter');","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nexport async function fetchContacts() {\n    const { data } = await axios.get('/contacts');\n    return data;\n}\n\nexport async function postContact(contact) {\n    return await axios.post('/contacts', {\n        name: contact.name,\n        number: contact.number\n    });\n}\n\nexport async function deleteContact(contactId) {\n    return await axios.delete(`/contacts/${contactId}`);\n}\n\nexport async function fetchContactById(contactId) {\n    const { data } = await axios.get(`/contacts/${contactId}`);\n    return data;\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactShelfAPI from '../services/contactshelf-api';\nimport * as contactsActions from './actions';\n\n// export const fetchContacts = () => async dispatch => {\n//     dispatch(contactsActions.fetchContactsRequest());\n//     try {\n//         const contacts = await contactShelfAPI.fetchContacts();\n//         dispatch(contactsActions.fetchContactsSuccess(contacts));\n//     } catch (error) {\n//         dispatch(contactsActions.fetchContactsError(error));\n//     }\n// };\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetchContacts',\n    async (_, { rejectWithValue }) => {\n        try {\n            const contacts = await contactShelfAPI.fetchContacts();\n            return contacts;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    }\n);\n\n// export const deleteContact = (id) => async dispatch => {\n//     dispatch(contactsActions.deleteContactRequest(id));\n//     try {\n//         await contactShelfAPI.deleteContact(id);\n//         dispatch(contactsActions.deleteContactSuccess(id));\n//     } catch (error) {\n//         dispatch(contactsActions.deleteContactError(error));\n//     }\n// }\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (id, { rejectWithValue }) => {\n        try {\n            await contactShelfAPI.deleteContact(id);\n            return id;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    }\n);\n\n// export const addContact = ({name, number}) => async dispatch => {\n//     dispatch(contactsActions.addContactRequest());\n//     try {\n//         const {data} = await contactShelfAPI.postContact({\n//             name,\n//             number,\n//         });\n//         dispatch(contactsActions.addContactSuccess(data));\n//     } catch (error) {\n//         dispatch(contactsActions.addContactError(error));\n//     }\n// }\n\nexport const addContact = createAsyncThunk(\n    'contacts/addContact',\n    async ({name, number}, { rejectWithValue }) => {    \n        try {\n            const { data } = await contactShelfAPI.postContact({\n                name,\n                number,\n            });\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    }\n);\n\nexport const changeFilter = (value) => dispatch => {\n    dispatch(contactsActions.changeFilter(value));\n}","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport { fetchContacts, deleteContact, addContact } from './operations';\nimport * as contactsActions from './actions';\n\nconst entities = createReducer([], {\n    // [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\n    // [contactsActions.addContactSuccess]: (state, { payload }) => [payload, ...state],\n    // [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    //     state.filter(({ id }) => id !== payload),\n    \n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n    [deleteContact.fulfilled]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n    // [contactsActions.fetchContactsRequest]: () => true,\n    // [contactsActions.fetchContactsSuccess]: () => false,\n    // [contactsActions.fetchContactsError]: () => false,\n\n    [fetchContacts.pending]: () => true,\n    [fetchContacts.fulfilled]: () => false,\n    [fetchContacts.rejected]: () => false,\n\n    // [contactsActions.deleteContactRequest]: () => true,\n    // [contactsActions.deleteContactSuccess]: () => false,\n    // [contactsActions.deleteContactError]: () => false,\n\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n\n    // [contactsActions.addContactRequest]: () => true,\n    // [contactsActions.addContactSuccess]: () => false,\n    // [contactsActions.addContactError]: () => false,\n\n    [addContact.pending]: () => true,\n    [addContact.fulfilled]: () => false,\n    [addContact.rejected]: () => false,\n})\n\nconst error = createReducer(null, {\n    // [contactsActions.fetchContactsError]: (_, { payload }) => payload,\n    // [contactsActions.fetchContactsRequest]: () => null,\n\n    [fetchContacts.rejected]: (_, { payload }) => payload,\n    [fetchContacts.pending]: () => null,\n\n    // [contactsActions.deleteContactError]: (_, { payload }) => payload,\n    // [contactsActions.deleteContactRequest]: () => null,\n\n    [deleteContact.rejected]: (_, { payload }) => payload,\n    [deleteContact.pending]: () => null,\n\n    // [contactsActions.addContactError]: (_, { payload }) => payload,\n    // [contactsActions.addContactRequest]: () => null,\n\n    [addContact.rejected]: (_, { payload }) => payload,\n    [addContact.pending]: () => null,\n})\n\nconst filter = createReducer('', {\n    [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    entities,\n    filter,\n    isLoading,\n    error,\n});","import { configureStore } from \"@reduxjs/toolkit\";\nimport phoneBookReducer from './reducer';\n\nexport const store = configureStore({\n    reducer: {\n        phoneBook: phoneBookReducer,\n    },\n    devTools: process.env.NODE_ENV === 'development',\n});","import { NavLink } from \"react-router-dom\";\nimport s from './Sidebar.module.css';\n\nconst Sidebar = () => (\n    <nav className={s.sidebar}>\n        <NavLink exact to=\"/login\" className={s.link} activeClassName={s.activeLink}>Login</NavLink>\n        <NavLink exact to=\"/register\" className={s.link} activeClassName={s.activeLink}>Register</NavLink>\n        <NavLink exact to=\"/contacts\" className={s.link} activeClassName={s.activeLink}>Contacts</NavLink>\n    </nav>\n);\n\nexport default Sidebar;","import { lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Sidebar from 'components/Sidebar';\nimport './App.css';\nimport { routes } from 'utils/routes';\n\nconst Registration = lazy(() => import('./components/Registration' /* webpackChunkName: \"Registration\" */));\nconst Login = lazy(() => import('./components/Login' /* webpackChunkName: \"Login\" */));\nconst ContactsView = lazy(() => import('./views/ContactsView' /* webpackChunkName: \"ContactsView\" */));\nconst NotFoundPage = lazy(() => import('./views/NotFoundPage' /* webpackChunkName: \"NotFoundPage\" */ ));\n\nconst App = () => {\n\n  return (\n    <>\n      <Sidebar />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <Route path={routes.contacts} exact component={ContactsView} />\n          <Route path={routes.login} exact component={Login} />\n          <Route path={routes.register} exact component={Registration} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n\nexport default (App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {store} from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}